set -g prefix 'C-a'
#set -g status-utf on
set -g base-index 0
set -g pane-base-index 0
set -s escape-time 0
set -g default-terminal 'screen-256color'
set -g history-limit 10000
set -g aggressive-resize on

unbind -a

#### GENERAL
bind-key          a send-prefix
bind-key -n     C-q send-prefix
bind-key          : command-prompt
bind-key          ? list-keys

# SESSION
bind-key          * choose-tree
bind-key -r       ( switch-client -p
bind-key -r       ) switch-client -n
bind-key        Tab switch-client -l
bind-key        '$' command-prompt -I "#S" "rename-session '%%'"

# CLIENTS
bind-key          d detach-client
bind-key          D choose-client
bind-key          z suspend-client

# WINDOWS
bind-key          c new-window
bind-key          C new-window -c .
bind-key        C-a last-window
bind-key        C-n next-window
bind-key          n next-window
bind-key        C-p previous-window
bind-key          p previous-window
bind-key          X confirm-before -p "kill-window #W? (y/n)" kill-window
bind-key          , command-prompt -I "#W" "rename-window '%%'"
bind-key          . command-prompt "move-window -t '%%'"
bind-key        "'" command-prompt -p index "select-window -t ':%%'"
bind-key          w choose-window
bind-key          f command-prompt "find-window '%%'"
bind-key -r       r rotate-window
bind-key -r       < swap-window -t -1
bind-key -r       > swap-window -t +1
bind-key          V select-layout even-vertical
bind-key          v select-layout even-horizontal
bind-key          t select-layout tiled
bind-key      Space next-layout
bind-key          0 select-window -t :0
bind-key          1 select-window -t :1
bind-key          2 select-window -t :2
bind-key          3 select-window -t :3
bind-key          4 select-window -t :4
bind-key          5 select-window -t :5
bind-key          6 select-window -t :6
bind-key          7 select-window -t :7
bind-key          8 select-window -t :8
bind-key          9 select-window -t :9

# PANES
bind-key        '"' split-window
bind-key          % split-window -h
bind-key         \; last-pane
bind-key          k select-pane -U
bind-key          j select-pane -D
bind-key          h select-pane -L
bind-key          l select-pane -R
bind-key        C-k select-pane -U
bind-key        C-j select-pane -D
bind-key        C-h select-pane -L
bind-key        C-l select-pane -R
bind-key         Up select-pane -U
bind-key       Down select-pane -D
bind-key       Left select-pane -L
bind-key      Right select-pane -R
bind-key          x confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind-key -r       { swap-pane -U
bind-key -r       } swap-pane -D
bind-key          ! break-pane
bind-key          & command-prompt -p window "join-pane -t ':%%'"
bind-key        '#' display-panes
bind-key          [ copy-mode
bind-key          ] paste-buffer
bind-key      PPage copy-mode -u
bind-key          + list-buffers
bind-key          = choose-buffer
bind-key          - delete-buffer
bind-key        '\' send-keys -R \; send-keys C-l \; clear-history
bind-key          s setw synchronize-panes\; display-message "synchronize-panes: #(tmux show-window-options -v synchronize-panes)"
bind-key          z resize-pane -Z

bind-key -r     K resize-pane -U 5
bind-key -r     J resize-pane -D 5
bind-key -r     H resize-pane -L 5
bind-key -r     L resize-pane -R 5

bind-key    -T root   MouseDown1Pane   select-pane -t = \; send-keys -M
bind-key    -T root   MouseDown1Status select-window -t =
bind-key    -T root   MouseDown3Pane   if-shell -F -t = "#{mouse_any_flag}" "select-pane -t=; send-keys -M" "select-pane -mt="
bind-key    -T root   MouseDrag1Pane   if-shell -F -t = "#{mouse_any_flag}" "if -Ft= '#{pane_in_mode}' 'copy-mode -M' 'send-keys -M'" "copy-mode -M"
bind-key    -T root   MouseDrag1Border resize-pane -M
bind-key    -T root   WheelUpPane      if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -et='"
bind-key    -T root   WheelUpStatus    previous-window
bind-key    -T root   WheelDownStatus  next-window

# use vi in copy buffer, add v and y for copy/paste
setw -g mode-keys vi
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection

set -g status-keys vi

is_osx='uname | grep -q Darwin'
if-shell "$is_osx" "set -g default-command 'tmux rename-window zsh; reattach-to-user-namespace -l $SHELL'"
if-shell "$is_osx" "bind-key -t vi-copy y copy-pipe 'reattach-to-user-namespace pbcopy'"
if-shell "$is_osx" "bind-key -t vi-copy Enter copy-pipe 'reattach-to-user-namespace pbcopy'"

#### COLOUR (Solarized 256)

# default statusbar colors
set-option -g status-bg colour235 #base02
set-option -g status-fg colour136 #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour244 #base0
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg colour166 #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

# message text
set-option -g message-bg colour235 #base02
set-option -g message-fg colour166 #orange

# pane number display
set-option -g display-panes-active-colour colour33 #blue
set-option -g display-panes-colour colour166 #orange

# clock
set-window-option -g clock-mode-colour colour64 #green

# mouse scrolling
set-option -g mouse on

# disable renaming
set-option -g allow-rename off

# Turn on window titles
set -g set-titles on

# Set window title string
#  #H  Hostname of local host
#  #I  Current window index
#  #P  Current pane index
#  #S  Session name
#  #T  Current window title
#  #W  Current window name
#  #   A literal ‘#’
set -g set-titles-string '#S:#I.#P #W'

# Automatically set window title
setw -g automatic-rename

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @resurrect-strategy-vim 'session'
run '~/.tmux/plugins/tpm/tpm'
